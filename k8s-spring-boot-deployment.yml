apiVersion: apps/v1
kind: Deployment
metadata:
  name: jhooq-springboot
  namespace: tesi
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 2
  selector:
    matchLabels:
      app: jhooq-springboot
  template:
    metadata:
      labels:
        app: jhooq-springboot
    spec:
      containers:
        - name: springboot
          image: alessandroliviero/jhooq-docker-demo:jhooq-docker-demo
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: jhooq-springboot
  namespace: tesi
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: '/ping'
spec:
  type: NodePort
  ports:
    - port: 80
      name: high
      protocol: TCP
      targetPort: 80
  selector:
    app: jhooq-springboot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test2
  namespace: tesi
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 2
  selector:
    matchLabels:
      app: test2
  template:
    metadata:
      labels:
        app: test2
    spec:
      containers:
        - name: springboot-test2
          image: alessandroliviero/test2-docker-demo:test2-docker-demo
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: test2
  namespace: tesi
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: '/actuator/health'
spec:
  ports:
    - port: 8081
      name: high
      protocol: TCP
      targetPort: 8081
  selector:
    app: test2
  type: NodePort
---
